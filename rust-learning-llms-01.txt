### Performance

Rust is blazingly fast and memory-efficient: with no runtime or
garbage collector, it can power performance-critical services, run on
embedded devices, and easily integrate with other languages.


### Reliability

Rust’s rich type system and ownership model guarantee memory-safety
and thread-safety — enabling you to eliminate many classes of
bugs at compile-time.


### Productivity

Rust has great documentation, a friendly compiler with useful error
messages, and top-notch tooling — an integrated package manager
and build tool, smart multi-editor support with auto-completion and
type inspections, an auto-formatter, and more.


In 2018, the Rust community decided to improve the programming experience
for a few distinct domains (see [the 2018\\
roadmap](https://blog.rust-lang.org/2018/03/12/roadmap.html)). For these, you can find many high-quality crates and some
awesome guides on how to get started.


![terminal](https://www.rust-lang.org/static/images/cli.svg)

### Command Line

Whip up a CLI tool quickly with Rust’s robust ecosystem.
Rust helps you maintain your app with confidence and distribute it with ease.


[Building Tools](https://www.rust-lang.org/what/cli)

![gear with puzzle piece elements](https://www.rust-lang.org/static/images/webassembly.svg)

### WebAssembly

Use Rust to supercharge your JavaScript, one module at a time.
Publish to npm, bundle with webpack, and you’re off to the races.


[Writing Web Apps](https://www.rust-lang.org/what/wasm)

![a cloud with nodes](https://www.rust-lang.org/static/images/networking.svg)

### Networking

Predictable performance. Tiny resource footprint. Rock-solid reliability.
Rust is great for network services.


[Working On Servers](https://www.rust-lang.org/what/networking)

![an embedded device chip](https://www.rust-lang.org/static/images/embedded.svg)

### Embedded

Targeting low-resource devices?
Need low-level control without giving up high-level conveniences?
Rust has you covered.


[Starting With Embedded](https://www.rust-lang.org/what/embedded)

Hundreds of companies around the world are using Rust in production
today for fast, low-resource, cross-platform solutions. Software you know
and love, like [Firefox](https://hacks.mozilla.org/2017/08/inside-a-super-fast-css-engine-quantum-css-aka-stylo/),
[Dropbox](https://blogs.dropbox.com/tech/2016/06/lossless-compression-with-brotli/),
and [Cloudflare](https://blog.cloudflare.com/cloudflare-workers-as-a-serverless-rust-platform/),
uses Rust. **From startups to large**
**corporations, from embedded devices to scalable web services, Rust is a great fit.**

> My biggest compliment to Rust is that it's boring, and this is an amazing compliment.

– Chris Dickinson, Engineer at npm, Inc

[![npm Logo](https://www.rust-lang.org/static/images/user-logos/npm.svg)](https://www.npmjs.com/)

* * *

[![Yelp Logo](https://www.rust-lang.org/static/images/user-logos/yelp.png)](https://www.youtube.com/watch?v=u6ZbF4apABk)

> All the documentation, the tooling, the community is great - you have all the tools to succeed in writing Rust code.

– Antonio Verardi, Infrastructure Engineer

[Learn More](https://www.rust-lang.org/production)

### Read Rust

We love documentation! Take a look at the books available online, as well as key blog posts and user guides.

[Read the book](https://www.rust-lang.org/learn)

### Watch Rust

The Rust community has a dedicated YouTube channel collecting a huge range of presentations and
tutorials.

[Watch the Videos](https://www.youtube.com/channel/UCaYhcUwRBNscFNUKTjgPFiA)

### Contribute code

Rust is truly a community effort, and we welcome contribution from hobbyists and production users, from
newcomers and seasoned professionals. Come help us make the Rust experience even better!


[Read Contribution Guide](https://rustc-dev-guide.rust-lang.org/getting-started.html)

Rust would not exist without the generous contributions of time, work, and resources from individuals and companies. We are very grateful for the support!


### Individuals

Rust is a community project and is very thankful for the many community contributions it receives.

[See individual contributors](https://thanks.rust-lang.org/)

### Corporate sponsors

The Rust project receives support from companies through the Rust Foundation.

[See Foundation members](https://foundation.rust-lang.org/members)